version: '3'
services:
#router
  mongo_router:
    container_name: mongo_router
    restart: always
    image: mongo:latest
    volumes:
       - mongodbdata_router:/data/router/db
       - ./etc/mongod.conf:/etc/mongo/mongod.conf
    ports:
      - '27030:27017'
    command: --config /etc/mongo/mongod.conf
    networks: 
      router_net:
  router:
    container_name: router
    restart: always
    environment: 
      - MONGO=mongodb://mongo_router:27017/rt_router
      - PORT=3080
    build: ./realtime_cluster/router
    ports:
      - "3080:3080"
    depends_on:
      - mongo_router
    links:
      - mongo_router
    networks: 
      router_net:
      static-network: 
        ipv4_address: 172.20.128.10
#RT_apps
  mongo_app:
    container_name: mongo_app
    restart: always
    image: mongo:latest
    volumes:
       - mongodbdata:/data/app/db
       - ./etc/mongod.conf:/etc/mongo/mongod.conf
    ports:
      - '27017:27017'
    command: --config /etc/mongo/mongod.conf
    networks: 
      rt_app_net:
  app:
    container_name: rt_app
    restart: always
    environment: 
      - APP_TYPE=application
      - MONGO=mongodb://mongo_app:27017/rt_app
      - ROUTER=http://172.20.128.10:3080/applications
      - PORT=3050
      - HOST=172.20.128.3
      # Echtzeit Bedingung - dieser wert darf nicht uberschritten werden in der rt_server -> backend kommunikation (in ms)
      - RT_CONSTRAIN=500
      # Es besteht die Moglichkeit die Nachrichen an das Backend hinauszuzuggern um den Server nicht zu uberlasten - Gefahr bottleneck
      - MESSAGE_AWAITER=1
    build: ./realtime_cluster/rt_application
    ports:
      - "3050:3050"
    depends_on:
      - mongo_app
      - router
    links:
      - mongo_app
    networks: 
      rt_app_net:
      static-network: 
        ipv4_address: 172.20.128.3
  mongo_chat:
    container_name: mongo_chat
    restart: always
    image: mongo:latest
    volumes:
       - mongodbdata_chat:/data/chat/db
       - ./etc/mongod.conf:/etc/mongo/mongod.conf
    ports:
      - '27020:27017'
    command: --config /etc/mongo/mongod.conf
    networks: 
      rt_chat_net:
  chat:
    container_name: rt_chat
    restart: always
    environment: 
      - APP_TYPE=chat
      - MONGO=mongodb://mongo_chat:27017/rt_chat
      - ROUTER=http://172.20.128.10:3080/applications
      - PORT=3040
      - HOST=172.20.128.4
      # Just als placeholder damit versehentlich kein Fehler fliegt
      - RT_CONSTRAIN=60000
      # Just als placeholder damit versehentlich kein Fehler fliegt
      - MESSAGE_AWAITER=1
    build: ./realtime_cluster/rt_application
    ports:
      - "3040:3040"
    depends_on:
      - mongo_chat
      - router
    links:
      - mongo_chat
    networks: 
      rt_chat_net:
      static-network: 
        ipv4_address: 172.20.128.4
# Spielbackend
  mongo_backend:
    container_name: mongo_backend
    restart: always
    image: mongo:latest
    volumes:
       - mongodbdata_backend:/data/backend/db
       - ./etc/mongod.conf:/etc/mongo/mongod.conf
    ports:
      - '27040:27017'
    command: --config /etc/mongo/mongod.conf
    networks: 
      game_backend_net:
  backend:
    container_name: game_backend
    restart: always
    environment: 
      - MONGO=mongodb://mongo_backend:27017/bombremann_backend
      - ROUTER=http://172.20.128.10:3080/applications
      - PORT=8080
      - HOST=172.20.128.5
    build: 
      context: ./game/bombremann-backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - mongo_backend
      - router
      - app
      - chat
    links:
      - mongo_backend
    networks: 
      game_backend_net:
      static-network: 
        ipv4_address: 172.20.128.5
#Client
  client:
    container_name: bombremann-client
    restart: always
    build: ./game/bombremann
    ports:
      - "3000:3000"
    networks: 
      static-network: 
        ipv4_address: 172.20.128.2
volumes:
  mongodbdata:
    external: false
  mongodbdata_chat:
    external: false
  mongodbdata_router:
    external: false
  mongodbdata_backend:
    external: false
networks: 
  rt_app_net:
    external: 
      name: rt_service_app
  rt_chat_net:
    external: 
      name: rt_service_chat
  router_net:
    external:
      name: router_net
  game_backend_net:
    external:
      name: game_backend_net
  static-network: 
    ipam: 
      config: 
        - subnet: 172.20.0.0/16